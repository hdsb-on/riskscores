% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_risk_mod.R
\name{cv_risk_mod}
\alias{cv_risk_mod}
\title{Cross-Validation to set lambda0}
\usage{
cv_risk_mod(
  X,
  y,
  weights = NULL,
  a = -10,
  b = 10,
  max_iters = 100,
  tol = 1e-05,
  nlambda = 25,
  lambda_min_ratio = ifelse(nrow(X) < ncol(X), 0.01, 1e-04),
  lambda0 = NULL,
  nfolds = 10,
  foldids = NULL,
  parallel = F,
  seed = NULL
)
}
\arguments{
\item{X}{input matrix with dimension n x p, every row is an observation}

\item{y}{numeric vector for the response variable (binomial)}

\item{weights}{numeric vector of length n with weights for each
observation (defult NULL - will give equal weights)}

\item{a}{integer lower bound for betas (default -10)}

\item{b}{integer upper bound for betas (default 10)}

\item{max_iters}{maximum number of iterations (default 100)}

\item{tol}{tolerance for convergence}

\item{nlambda}{number of lambda values to try (default 10)}

\item{lambda_min_ratio}{smallest value for lambda, as a fraction of
lambda_max, the (data derived) entry value (i.e. the smallest value
for which all coefficients are zero). The default depends on the sample size
(n) relative to the number of variables (p). If n > p, the default is 0.0001,
close to zero.  If n < p, the default is 0.01.}

\item{lambda0}{optional sequence of lambda values (default NULL)}

\item{nfolds}{number of folds, implied if foldids provided (default 10)}

\item{foldids}{optional vector of values between 1 and nfolds (default NULL)}

\item{parallel}{If \code{TRUE}, use parallel \code{foreach} to fit each fold.
Must register parallel before hand, such as \code{doParallel} or others.}

\item{seed}{An integer that is used as argument by the set.seed() for
offsetting the random number generator. Default is to leave the random number
generator alone.}
}
\value{
class of cv_risk_mod with a list containing a data.frame of results
along with the lambda_min and lambda_1se
}
\description{
Runs k-fold cross-validation and records class accuracy and deviance
}
